
import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author ferideucum
 */
public class score_table extends javax.swing.JFrame {

    /**
     * Creates new form score_table
     */
    public score_table() {
        initComponents();
        Min_s.setVisible(false);
        Max_s.setVisible(false);

        // Tablo modelini oluşturma
        DefaultTableModel tableModel = new DefaultTableModel();

        // Sütun başlıklarını ekle
        tableModel.addColumn("UserName");
        tableModel.addColumn("Level");
        tableModel.addColumn("Score");

        // Aynı zamanda BST'yi doldurma için BST nesnesi oluştur
        BST tree = new BST();

        try {
            // Dosyayı oku
            BufferedReader reader = new BufferedReader(new FileReader("score.txt"));
            String line;

            // Dosyadaki her satırı oku
            while ((line = reader.readLine()) != null) {
                // Satırı virgüllere göre parçala
                String[] data = line.split(",");

                // Eğer veri doğru formatta ise tabloya ekle
                if (data.length == 3) {
                    String user = data[0].trim();
                    String level = data[1].trim();
                    int score = Integer.parseInt(data[2].trim());

                    // Tabloya ekle
                    tableModel.addRow(data);

                    // BST'ye ekle - bu, min/max işlemlerini kullanabilmek için gerekli
                    tree.insert(score, user, level);
                }
            }
            reader.close();

            // JTable'a tablo modelini uygula
            score_table.setModel(tableModel);

            // Tablo görünümünü iyileştir
            score_table.setRowHeight(25);
            score_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

            System.out.println("Skor verileri başarıyla tabloya yüklendi.");

        } catch (IOException e) {
            System.err.println("Dosya okuma hatası: " + e.getMessage());
            e.printStackTrace();

            // Hata durumunda boş tablo göster
            score_table.setModel(tableModel);
        }

        // Arka plan ve görsel eklemeleri
        ImageIcon icon = new ImageIcon(getClass().getResource("/images/ekran2.jpg"));
        Image image = icon.getImage().getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(), Image.SCALE_SMOOTH);
        jLabel1.setIcon(new ImageIcon(image));

        ImageIcon icon1 = new ImageIcon(getClass().getResource("/images/ejderha.png"));
        Image image1 = icon1.getImage().getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_SMOOTH);
        jLabel2.setIcon(new ImageIcon(image1));
        
         ImageIcon book = new ImageIcon(getClass().getResource("/images/book.png"));
        Image image_b = book.getImage().getScaledInstance(jLabel6.getWidth(), jLabel6.getHeight(), Image.SCALE_SMOOTH);
        jLabel6.setIcon(new ImageIcon(image_b));
        
         ImageIcon book1 = new ImageIcon(getClass().getResource("/images/book.png"));
        Image image_b1 = book1.getImage().getScaledInstance(jLabel7.getWidth(), jLabel7.getHeight(), Image.SCALE_SMOOTH);
        jLabel7.setIcon(new ImageIcon(image_b1));
        
        ImageIcon d = new ImageIcon(getClass().getResource("/images/d2.png"));
        Image d1 = d.getImage().getScaledInstance(jLabel8.getWidth(), jLabel8.getHeight(), Image.SCALE_SMOOTH);
        jLabel8.setIcon(new ImageIcon(d1));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        score_table = new javax.swing.JTable();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userName_txt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Max_s = new javax.swing.JLabel();
        Min_s = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        score_table.setForeground(new java.awt.Color(102, 0, 102));
        score_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Username", "Level", "Scores"
            }

        ));
        score_table.setSelectionBackground(new java.awt.Color(102, 0, 102));
        jScrollPane1.setViewportView(score_table);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(160, 80, 430, 360);

        jToggleButton1.setText("Go Back");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1);
        jToggleButton1.setBounds(330, 480, 81, 23);

        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(620, 350, 110, 150);

        jLabel3.setFont(new java.awt.Font("Herculanum", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("Enter the username:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 20, 150, 14);
        jPanel1.add(userName_txt);
        userName_txt.setBounds(170, 10, 64, 23);

        jButton1.setText("SEARCH");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(250, 10, 90, 23);

        jLabel4.setFont(new java.awt.Font("Herculanum", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setText("MAX.  SCORE");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(640, 90, 80, 14);

        jLabel5.setFont(new java.awt.Font("Herculanum", 0, 13)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setText("MIN.  SCORE");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(30, 90, 90, 14);

        Max_s.setFont(new java.awt.Font("Herculanum", 0, 14)); // NOI18N
        Max_s.setForeground(new java.awt.Color(102, 0, 102));
        Max_s.setText("jLabel6");
        jPanel1.add(Max_s);
        Max_s.setBounds(650, 110, 70, 17);

        Min_s.setFont(new java.awt.Font("Herculanum", 0, 14)); // NOI18N
        Min_s.setForeground(new java.awt.Color(102, 0, 102));
        Min_s.setText("jLabel6");
        jPanel1.add(Min_s);
        Min_s.setBounds(40, 110, 70, 15);

        jButton2.setText("SHOW ALL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(360, 10, 100, 23);

        jLabel6.setText("jLabel6");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(620, 50, 120, 130);

        jLabel7.setText("jLabel6");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(10, 50, 120, 130);

        jLabel8.setText("jLabel8");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(0, 10, 160, 40);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 760, 560);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        start hel = new start();
        hel.setVisible(true);
        setVisible(false);
        this.dispose();      // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 String username = userName_txt.getText().trim();
        
        if (username.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please enter a username!", "Error", JOptionPane.ERROR_MESSAGE);
    return; 
    
}



        BST tree = new BST();


        DefaultTableModel tableModel = new DefaultTableModel();
        tableModel.addColumn("UserName");
        tableModel.addColumn("Level");
        tableModel.addColumn("Score");

        try {
            BufferedReader reader = new BufferedReader(new FileReader("score.txt"));
            String line;
            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length == 3) {
                    String user = data[0].trim();
                    String level = data[1].trim();
                    int score = Integer.parseInt(data[2].trim());

                    if (user.equalsIgnoreCase(username)) {
                        // BST'ye ekle
                        tree.insert(score, user, level);
                    }
                }
            }
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        }

        try (BufferedReader br = new BufferedReader(new FileReader("score.txt"))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length == 3) {
                    String user = data[0].trim();
                    String level = data[1].trim();
                    int score = Integer.parseInt(data[2].trim());

                    if (user.equalsIgnoreCase(username)) {
                        // BST'ye ekle
                        tree.insert(score, user, level);

                        // JTable'a da ekle
                        tableModel.addRow(new Object[]{user, level, score});
                    }
                }
            }

            // Tablonun ayarları
            score_table.setModel(tableModel);
            score_table.setRowHeight(25);
            score_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Dosya okunurken hata oluştu!", "Hata", JOptionPane.ERROR_MESSAGE);
        }

// Min ve Max Skorları Göster
        BstNode minNode = tree.findMinForUser(username);
        BstNode maxNode = tree.findMaxForUser(username);
        if (minNode != null) {
            Min_s.setText(String.valueOf(minNode.score));
        } else {
            Min_s.setText("Veri yok");
        }

        if (maxNode != null) {
            Max_s.setText(String.valueOf(maxNode.score));
        } else {
            Max_s.setText("Veri yok");
        }
        Min_s.setVisible(true);
        Max_s.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel tableModel = new DefaultTableModel();

        tableModel.addColumn("UserName");
        tableModel.addColumn("Level");
        tableModel.addColumn("Score");

        BST tree = new BST();

        try {
            
            BufferedReader reader = new BufferedReader(new FileReader("score.txt"));
            String line;

            while ((line = reader.readLine()) != null) {
                String[] data = line.split(",");
                if (data.length == 3) {
                    String user = data[0].trim();
                    String level = data[1].trim();
                    int score = Integer.parseInt(data[2].trim());

                    tableModel.addRow(new Object[]{user, level, score});

                    tree.insert(score, user, level);
                }
            }
            reader.close();

            score_table.setModel(tableModel);

            score_table.setRowHeight(25);
            score_table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);

            Min_s.setVisible(false);
            Max_s.setVisible(false);

        } catch (IOException e) {
            System.err.println("Dosya okuma hatası: " + e.getMessage());
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Dosya okuma hatası: " + e.getMessage(),
                    "Hata", JOptionPane.ERROR_MESSAGE);
            score_table.setModel(tableModel);
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(score_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(score_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(score_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(score_table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new score_table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Max_s;
    private javax.swing.JLabel Min_s;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable score_table;
    private javax.swing.JTextField userName_txt;
    // End of variables declaration//GEN-END:variables
}
